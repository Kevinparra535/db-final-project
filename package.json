{
	"name": "data-final",
	"version": "1.0.0",
	"description": "",
	"main": "index.js",
	"scripts": {
		"dev": "nodemon index.js",
		"start": "node index.js",
		"lint": "eslint",
		"test": "echo \"Error: no test specified\" && exit 1",
		"migrations:generate": "sequelize-cli migration:generate --name",
		"migrations:run": "sequelize-cli db:migrate",
		"migrations:revert": "sequelize-cli db:migrate:undo",
		"migrations:delete": "sequelize-cli db:migrate:undo:all",
		"db:create": "node -e \"const { config } = require('./db/config/config'); const { Sequelize } = require('sequelize'); const sequelize = new Sequelize('postgres', config.development.username, config.development.password, { host: config.development.host, port: config.development.port, dialect: 'postgres', logging: false }); sequelize.query('CREATE DATABASE IF NOT EXISTS \\\"' + config.development.database + '\\\"').then(() => { console.log('Database created successfully'); process.exit(0); }).catch(err => { console.error('Error creating database:', err); process.exit(1); });\"",
		"db:migrate": "npx sequelize-cli db:migrate --config db/config.js",
		"db:migrate:undo": "npx sequelize-cli db:migrate:undo --config db/config.js",
		"db:seed": "node db/seeders/seed-database.js",
		"db:reset": "npm run db:migrate:undo:all && npm run db:migrate && npm run db:seed",
		"db:migrate:undo:all": "npx sequelize-cli db:migrate:undo:all --config db/config.js",
		"db:setup": "npm run db:create && npm run db:migrate && npm run db:seed"
	},
	"keywords": [],
	"author": "",
	"license": "ISC",
	"type": "commonjs",
	"devDependencies": {
		"eslint": "^9.38.0",
		"eslint-config-prettier": "^10.1.8",
		"eslint-plugin-prettier": "^5.5.4",
		"nodemon": "^3.1.10",
		"prettier": "^3.6.2",
		"sequelize-cli": "^6.6.3"
	},
	"dependencies": {
		"@faker-js/faker": "^10.1.0",
		"@hapi/boom": "^10.0.1",
		"dotenv": "^17.2.3",
		"express": "^5.1.0",
		"faker": "^6.6.6",
		"joi": "^18.0.1",
		"mysql2": "^3.15.3",
		"pg": "^8.16.3",
		"pg-hstore": "^2.3.4",
		"sequelize": "^6.37.7"
	}
}
